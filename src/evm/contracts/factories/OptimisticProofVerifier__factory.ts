/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OptimisticProofVerifier,
  OptimisticProofVerifierInterface,
} from "../OptimisticProofVerifier";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_l2OutputOracleAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "l2OutputOracleAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "appHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "key",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "proofs",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyStateUpdate",
    inputs: [
      {
        name: "l1header",
        type: "tuple",
        internalType: "struct L1Header",
        components: [
          {
            name: "header",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "stateRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "number",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "proof",
        type: "tuple",
        internalType: "struct OpL2StateProof",
        components: [
          {
            name: "accountProof",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "outputRootProof",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "l2OutputProposalKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "l2BlockHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "appHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "trustedL1BlockHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "trustedL1BlockNumber",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InvalidAppHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidIbcStateProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidL1BlockHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidL1BlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPacketProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProofKey",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProofValue",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRLPEncodedL1BlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRLPEncodedL1StateRoot",
    inputs: [],
  },
  {
    type: "error",
    name: "MethodNotImplemented",
    inputs: [],
  },
] as const;

const _bytecode =
  "";

type OptimisticProofVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimisticProofVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimisticProofVerifier__factory extends ContractFactory {
  constructor(...args: OptimisticProofVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _l2OutputOracleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_l2OutputOracleAddress, overrides || {});
  }
  override deploy(
    _l2OutputOracleAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_l2OutputOracleAddress, overrides || {}) as Promise<
      OptimisticProofVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OptimisticProofVerifier__factory {
    return super.connect(runner) as OptimisticProofVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimisticProofVerifierInterface {
    return new Interface(_abi) as OptimisticProofVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OptimisticProofVerifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OptimisticProofVerifier;
  }
}
