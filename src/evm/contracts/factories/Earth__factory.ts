/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Earth, EarthInterface } from "../Earth";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_middleware",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ackPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "ack",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizeMiddleware",
    inputs: [
      {
        name: "middleware",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "authorizedMws",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "generateAckPacket",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "srcPortAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "appData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "ackPacket",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "greet",
    inputs: [
      {
        name: "destPortAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "timeoutTimestamp",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mw",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onRecvUniversalPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "ackPacket",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onTimeoutUniversalPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onUniversalAcknowledgement",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "ack",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "recvedPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultMw",
    inputs: [
      {
        name: "_middleware",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "timeoutPackets",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "packet",
        type: "tuple",
        internalType: "struct UniversalPacket",
        components: [
          {
            name: "srcPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "mwBitmap",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "destPortAddr",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "appData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "UnauthorizedIbcMiddleware",
    inputs: [],
  },
  {
    type: "error",
    name: "ackAddressMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "ackDataTooShort",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516115a63803806115a683398101604081905261002f916100d3565b8061003933610083565b600180546001600160a01b0319166001600160a01b03831617905561007c816001600160a01b03166000908152600260205260409020805460ff19166001179055565b5050610103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e557600080fd5b81516001600160a01b03811681146100fc57600080fd5b9392505050565b611494806101126000396000f3fe6080604052600436106100eb5760003560e01c80635b7615851161008a578063a742d78c11610059578063a742d78c146102af578063d24ba024146102cf578063f12b758a146102ef578063f2fde38b1461030f57600080fd5b80635b7615851461021b578063715018a614610248578063866f3f971461025d5780638da5cb5b1461027d57600080fd5b8063400d9f5d116100c6578063400d9f5d1461017e5780634252ae9b1461019e5780634eeb7391146101cd578063588152ca146101fb57600080fd5b8062e82cef146100f75780633a7fbcbd146101195780633b90b0421461015e57600080fd5b366100f257005b600080fd5b34801561010357600080fd5b50610117610112366004610bcf565b61032f565b005b34801561012557600080fd5b50610149610134366004610bcf565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561016a57600080fd5b50610117610179366004610bcf565b610362565b34801561018a57600080fd5b50610117610199366004610bea565b610376565b3480156101aa57600080fd5b506101be6101b9366004610c37565b610424565b60405161015593929190610d08565b3480156101d957600080fd5b506101ed6101e8366004610c37565b6105c8565b604051610155929190610d3d565b34801561020757600080fd5b50610117610216366004610ec3565b6106b6565b34801561022757600080fd5b5061023b610236366004610bea565b610835565b6040516101559190610f36565b34801561025457600080fd5b50610117610978565b34801561026957600080fd5b5061023b610278366004610f91565b61098c565b34801561028957600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610155565b3480156102bb57600080fd5b50600154610297906001600160a01b031681565b3480156102db57600080fd5b506101176102ea366004610fea565b6109e7565b3480156102fb57600080fd5b506101ed61030a366004610c37565b610a5a565b34801561031b57600080fd5b5061011761032a366004610bcf565b610a6a565b610337610ae5565b61034081610b3f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61036a610ae5565b61037381610b3f565b50565b3360009081526002602052604090205460ff166103a657604051630ddfd93d60e11b815260040160405180910390fd5b60056040518060400160405280848152602001836103c390611063565b90528154600181810184556000938452602093849020835160059093020191825583830151805191830191825593840151600283015560408401516003830155606084015192939192600484019061041b90826110fe565b50505050505050565b6004818154811061043457600080fd5b90600052602060002090600702016000915090508060000154908060010160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461048b90611075565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790611075565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b5050509190925250506040805180820190915260058401805460ff1615158252600685018054949594929350909160208401919061054190611075565b80601f016020809104026020016040519081016040528092919081815260200182805461056d90611075565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081525050905083565b600581815481106105d857600080fd5b90600052602060002090600502016000915090508060000154908060010160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201805461062f90611075565b80601f016020809104026020016040519081016040528092919081815260200182805461065b90611075565b80156106a85780601f1061067d576101008083540402835291602001916106a8565b820191906000526020600020905b81548152906001019060200180831161068b57829003601f168201915b505050505081525050905082565b3360009081526002602052604090205460ff166106e657604051630ddfd93d60e11b815260040160405180910390fd5b60146106f560208301836111bd565b905010156107165760405163503b43db60e01b815260040160405180910390fd5b600061072560208301836111bd565b61073491601491600091611203565b61073d9161122d565b60601c9050806001600160a01b0316610757846040015190565b6001600160a01b03161461077e57604051631863a42d60e31b815260040160405180910390fd5b60046040518060600160405280868152602001858152602001846107a190611270565b9052815460018181018455600093845260209384902083516007909302019182558383015180519183019182559384015160028301556040840151600383015560608401519293919260048401906107f990826110fe565b5050506040820151805160058301805460ff19169115159190911781556020820151600684019061082a90826110fe565b505050505050505050565b6040805180820190915260008152606060208201523360009081526002602052604090205460ff1661087a57604051630ddfd93d60e11b815260040160405180910390fd5b600360405180604001604052808581526020018461089790611063565b9052815460018181018455600093845260209384902083516005909302019182558383015180519183019182559384015160028301556040840151600383015560608401519293919260048401906108ef90826110fe565b5030935063866f3f97925086915050843561090d60608701876111bd565b6040518563ffffffff1660e01b815260040161092c94939291906112f1565b600060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610971919081019061131c565b9392505050565b610980610ae5565b61098a6000610b63565b565b6040805180820190915260008152606060208201526040518060400160405280600115158152602001308686866040516020016109cc94939291906113d9565b60408051601f19818403018152919052905295945050505050565b6001546001600160a01b0316631f3a583085610a09886001600160a01b031690565b8686866040518663ffffffff1660e01b8152600401610a2c959493929190611423565b600060405180830381600087803b158015610a4657600080fd5b505af115801561082a573d6000803e3d6000fd5b600381815481106105d857600080fd5b610a72610ae5565b6001600160a01b038116610adc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61037381610b63565b6000546001600160a01b0316331461098a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ad3565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610bca57600080fd5b919050565b600060208284031215610be157600080fd5b61097182610bb3565b60008060408385031215610bfd57600080fd5b8235915060208301356001600160401b03811115610c1a57600080fd5b830160808186031215610c2c57600080fd5b809150509250929050565b600060208284031215610c4957600080fd5b5035919050565b60005b83811015610c6b578181015183820152602001610c53565b83811115610c7a576000848401525b50505050565b60008151808452610c98816020860160208601610c50565b601f01601f19169290920160200192915050565b8051825260208101516020830152604081015160408301526000606082015160806060850152610cdf6080850182610c80565b949350505050565b8051151582526000602082015160406020850152610cdf6040850182610c80565b838152606060208201526000610d216060830185610cac565b8281036040840152610d338185610ce7565b9695505050505050565b828152604060208201526000610cdf6040830184610cac565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610d8e57610d8e610d56565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610dbc57610dbc610d56565b604052919050565b60006001600160401b03821115610ddd57610ddd610d56565b50601f01601f191660200190565b600082601f830112610dfc57600080fd5b8135610e0f610e0a82610dc4565b610d94565b818152846020838601011115610e2457600080fd5b816020850160208301376000918101602001919091529392505050565b600060808284031215610e5357600080fd5b604051608081016001600160401b038282108183111715610e7657610e76610d56565b816040528293508435835260208501356020840152604085013560408401526060850135915080821115610ea957600080fd5b50610eb685828601610deb565b6060830152505092915050565b600080600060608486031215610ed857600080fd5b8335925060208401356001600160401b0380821115610ef657600080fd5b610f0287838801610e41565b93506040860135915080821115610f1857600080fd5b50840160408187031215610f2b57600080fd5b809150509250925092565b6020815260006109716020830184610ce7565b60008083601f840112610f5b57600080fd5b5081356001600160401b03811115610f7257600080fd5b602083019150836020828501011115610f8a57600080fd5b9250929050565b60008060008060608587031215610fa757600080fd5b84359350610fb760208601610bb3565b925060408501356001600160401b03811115610fd257600080fd5b610fde87828801610f49565b95989497509550505050565b60008060008060006080868803121561100257600080fd5b61100b86610bb3565b94506020860135935060408601356001600160401b038082111561102e57600080fd5b61103a89838a01610f49565b909550935060608801359150808216821461105457600080fd5b50809150509295509295909350565b600061106f3683610e41565b92915050565b600181811c9082168061108957607f821691505b6020821081036110a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156110f957600081815260208120601f850160051c810160208610156110d65750805b601f850160051c820191505b818110156110f5578281556001016110e2565b5050505b505050565b81516001600160401b0381111561111757611117610d56565b61112b816111258454611075565b846110af565b602080601f83116001811461116057600084156111485750858301515b600019600386901b1c1916600185901b1785556110f5565b600085815260208120601f198616915b8281101561118f57888601518255948401946001909101908401611170565b50858210156111ad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808335601e198436030181126111d457600080fd5b8301803591506001600160401b038211156111ee57600080fd5b602001915036819003821315610f8a57600080fd5b6000808585111561121357600080fd5b8386111561122057600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff19813581811691601485101561125a5780818660140360031b1b83161692505b505092915050565b801515811461037357600080fd5b60006040823603121561128257600080fd5b61128a610d6c565b823561129581611262565b815260208301356001600160401b038111156112b057600080fd5b6112bc36828601610deb565b60208301525092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8481526001600160a01b0384166020820152606060408201819052600090610d3390830184866112c8565b6000602080838503121561132f57600080fd5b82516001600160401b038082111561134657600080fd5b908401906040828703121561135a57600080fd5b611362610d6c565b825161136d81611262565b8152828401518281111561138057600080fd5b80840193505086601f84011261139557600080fd5b825191506113a5610e0a83610dc4565b82815287858486010111156113b957600080fd5b6113c883868301878701610c50565b938101939093525090949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152506361636b2d60e01b60288301528284602c8401375060009101602c019081529392505050565b8581528460208201526080604082015260006114436080830185876112c8565b90506001600160401b0383166060830152969550505050505056fea2646970667358221220e5ead40d8f0b298119ae73319771a5ec2bb3efc979d8f47ca856eb4190de224d64736f6c634300080f0033";

type EarthConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarthConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Earth__factory extends ContractFactory {
  constructor(...args: EarthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _middleware: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_middleware, overrides || {});
  }
  override deploy(
    _middleware: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_middleware, overrides || {}) as Promise<
      Earth & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Earth__factory {
    return super.connect(runner) as Earth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarthInterface {
    return new Interface(_abi) as EarthInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Earth {
    return new Contract(address, _abi, runner) as unknown as Earth;
  }
}
