/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DummyLightClient,
  DummyLightClientInterface,
} from "../DummyLightClient";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "LIGHT_CLIENT_TYPE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum LightClientType",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getState",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "appHash",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "updateClient",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "InvalidDummyMembershipProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDummyNonMembershipProof",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b506103c48061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806344c9af281461005c57806349ff245e1461008357806357c1c5f414610099578063cb535ab5146100ae578063fdaab4e5146100c1575b600080fd5b61007061006a366004610127565b50600090565b6040519081526020015b60405180910390f35b610097610091366004610140565b50505050565b005b6100a1600081565b60405161007a91906101bf565b6100976100bc3660046102a2565b6100d4565b6100976100cf36600461032a565b6100fe565b82602001356000036100f957604051636cb681eb60e01b815260040160405180910390fd5b505050565b816020013560000361012357604051631e76ddb960e21b815260040160405180910390fd5b5050565b60006020828403121561013957600080fd5b5035919050565b6000806000806060858703121561015657600080fd5b843567ffffffffffffffff8082111561016e57600080fd5b818701915087601f83011261018257600080fd5b81358181111561019157600080fd5b8860208285010111156101a357600080fd5b6020928301999098509187013596604001359550909350505050565b60208101600383106101e157634e487b7160e01b600052602160045260246000fd5b91905290565b6000604082840312156101f957600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261022657600080fd5b813567ffffffffffffffff80821115610241576102416101ff565b604051601f8301601f19908116603f01168101908282118183101715610269576102696101ff565b8160405283815286602085880101111561028257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102b757600080fd5b833567ffffffffffffffff808211156102cf57600080fd5b6102db878388016101e7565b945060208601359150808211156102f157600080fd5b6102fd87838801610215565b9350604086013591508082111561031357600080fd5b5061032086828701610215565b9150509250925092565b6000806040838503121561033d57600080fd5b823567ffffffffffffffff8082111561035557600080fd5b610361868387016101e7565b9350602085013591508082111561037757600080fd5b5061038485828601610215565b915050925092905056fea2646970667358221220e5c271ef052030be1efeb842e5495c10402ee2fe037d7268a06b66359d79280464736f6c634300080f0033";

type DummyLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyLightClient__factory extends ContractFactory {
  constructor(...args: DummyLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyLightClient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyLightClient__factory {
    return super.connect(runner) as DummyLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyLightClientInterface {
    return new Interface(_abi) as DummyLightClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyLightClient {
    return new Contract(address, _abi, runner) as unknown as DummyLightClient;
  }
}
