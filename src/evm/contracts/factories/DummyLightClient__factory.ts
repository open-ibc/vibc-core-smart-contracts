/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DummyLightClient,
  DummyLightClientInterface,
} from "../DummyLightClient";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getState",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "appHash",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "updateClient",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "InvalidDummyMembershipProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDummyNonMembershipProof",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061037b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806344c9af281461005157806349ff245e14610077578063cb535ab51461008d578063fdaab4e5146100a0575b600080fd5b61006561005f366004610106565b50600090565b60405190815260200160405180910390f35b61008b61008536600461011f565b50505050565b005b61008b61009b366004610259565b6100b3565b61008b6100ae3660046102e1565b6100dd565b82602001356000036100d857604051636cb681eb60e01b815260040160405180910390fd5b505050565b816020013560000361010257604051631e76ddb960e21b815260040160405180910390fd5b5050565b60006020828403121561011857600080fd5b5035919050565b6000806000806060858703121561013557600080fd5b843567ffffffffffffffff8082111561014d57600080fd5b818701915087601f83011261016157600080fd5b81358181111561017057600080fd5b88602082850101111561018257600080fd5b6020928301999098509187013596604001359550909350505050565b6000604082840312156101b057600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101dd57600080fd5b813567ffffffffffffffff808211156101f8576101f86101b6565b604051601f8301601f19908116603f01168101908282118183101715610220576102206101b6565b8160405283815286602085880101111561023957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561026e57600080fd5b833567ffffffffffffffff8082111561028657600080fd5b6102928783880161019e565b945060208601359150808211156102a857600080fd5b6102b4878388016101cc565b935060408601359150808211156102ca57600080fd5b506102d7868287016101cc565b9150509250925092565b600080604083850312156102f457600080fd5b823567ffffffffffffffff8082111561030c57600080fd5b6103188683870161019e565b9350602085013591508082111561032e57600080fd5b5061033b858286016101cc565b915050925092905056fea2646970667358221220faadd2b4cc359ab81e40d78c07b1dc38ed3b108471a1ab1cbc0fa2addf67cbfd64736f6c634300080f0033";

type DummyLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyLightClient__factory extends ContractFactory {
  constructor(...args: DummyLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyLightClient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyLightClient__factory {
    return super.connect(runner) as DummyLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyLightClientInterface {
    return new Interface(_abi) as DummyLightClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyLightClient {
    return new Contract(address, _abi, runner) as unknown as DummyLightClient;
  }
}
