/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DummyLightClient,
  DummyLightClientInterface,
} from "../DummyLightClient";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addOpConsensusState",
    inputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct L1Header",
        components: [
          {
            name: "header",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "stateRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "number",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct OpL2StateProof",
        components: [
          {
            name: "accountProof",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "outputRootProof",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "l2OutputProposalKey",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "l2BlockHash",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "endTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ended",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getFraudProofEndtime",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "endTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getState",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "appHash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "fraudProofEndtime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ended",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "InvalidDummyMembershipProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDummyNonMembershipProof",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103d8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806344c9af281461005c5780635922f42014610096578063cb535ab5146100c5578063d56ff842146100da578063fdaab4e5146100fc575b600080fd5b61007461006a366004610162565b5060009081908190565b6040805193845260208401929092521515908201526060015b60405180910390f35b6100b06100a436600461017b565b60008094509492505050565b6040805192835290151560208301520161008d565b6100d86100d33660046102b6565b61010f565b005b6100ee6100e8366004610162565b50600090565b60405190815260200161008d565b6100d861010a36600461033e565b610139565b826020013560000361013457604051636cb681eb60e01b815260040160405180910390fd5b505050565b816020013560000361015e57604051631e76ddb960e21b815260040160405180910390fd5b5050565b60006020828403121561017457600080fd5b5035919050565b6000806000806080858703121561019157600080fd5b843567ffffffffffffffff808211156101a957600080fd5b90860190606082890312156101bd57600080fd5b909450602086013590808211156101d357600080fd5b508501608081880312156101e657600080fd5b93969395505050506040820135916060013590565b60006040828403121561020d57600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261023a57600080fd5b813567ffffffffffffffff8082111561025557610255610213565b604051601f8301601f19908116603f0116810190828211818310171561027d5761027d610213565b8160405283815286602085880101111561029657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102cb57600080fd5b833567ffffffffffffffff808211156102e357600080fd5b6102ef878388016101fb565b9450602086013591508082111561030557600080fd5b61031187838801610229565b9350604086013591508082111561032757600080fd5b5061033486828701610229565b9150509250925092565b6000806040838503121561035157600080fd5b823567ffffffffffffffff8082111561036957600080fd5b610375868387016101fb565b9350602085013591508082111561038b57600080fd5b5061039885828601610229565b915050925092905056fea26469706673582212207befcacce43d382e609d84ddbf6d951e607548e6d657d90ebabbf78b5a72f52e64736f6c634300080f0033";

type DummyLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyLightClient__factory extends ContractFactory {
  constructor(...args: DummyLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyLightClient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyLightClient__factory {
    return super.connect(runner) as DummyLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyLightClientInterface {
    return new Interface(_abi) as DummyLightClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DummyLightClient {
    return new Contract(address, _abi, runner) as unknown as DummyLightClient;
  }
}
