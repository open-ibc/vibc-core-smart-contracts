/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  UniversalChannelHandler,
  UniversalChannelHandlerInterface,
} from "../UniversalChannelHandler";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "MW_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "closeChannel",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dispatcher",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IbcDispatcher",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_dispatcher",
        type: "address",
        internalType: "contract IbcDispatcher",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onAcknowledgementPacket",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "ack",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onChanCloseConfirm",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "string",
        internalType: "string",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onChanCloseInit",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "string",
        internalType: "string",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onChanOpenAck",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "counterpartyVersion",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onChanOpenConfirm",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onChanOpenTry",
    inputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum ChannelOrder",
      },
      {
        name: "",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "string",
        internalType: "string",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "counterpartyVersion",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "selectedVersion",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onRecvPacket",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "ackPacket",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onTimeoutPacket",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "openChannel",
    inputs: [
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "ordering",
        type: "uint8",
        internalType: "enum ChannelOrder",
      },
      {
        name: "feeEnabled",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "connectionHops",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "counterpartyPortIdentifier",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sendUniversalPacket",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "destPortAddr",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "appData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "timeoutTimestamp",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sendUniversalPacketWithFee",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "destPortAddr",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "appData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "timeoutTimestamp",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "gasLimits",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
      {
        name: "gasPrices",
        type: "uint256[2]",
        internalType: "uint256[2]",
      },
    ],
    outputs: [
      {
        name: "sequence",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setDispatcher",
    inputs: [
      {
        name: "_dispatcher",
        type: "address",
        internalType: "contract IbcDispatcher",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeTo",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      {
        name: "previousAdmin",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BeaconUpgraded",
    inputs: [
      {
        name: "beacon",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UCHPacketSent",
    inputs: [
      {
        name: "source",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "destination",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ChannelNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "MwBitmpaCannotBeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "UnsupportedVersion",
    inputs: [],
  },
  {
    type: "error",
    name: "invalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "notIbcDispatcher",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000030565b6200002a62000030565b620000f1565b600054610100900460ff16156200009d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000ef576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161266562000129600039600081816105ff0152818161064801528181610a8e01528181610ace0152610b6101526126656000f3fe60806040526004361061016a5760003560e01c806379ba5097116100d1578063c4d66de81161008a578063e847e28011610064578063e847e28014610407578063f2fde38b14610427578063fad28a2414610447578063ffa1ad741461046757600080fd5b8063c4d66de8146103a9578063cb7e9057146103c9578063e30c3978146103e957600080fd5b806379ba5097146102ed5780637e1d42b5146103025780638da5cb5b14610322578063ace02de714610354578063ba22bd7614610374578063c1cb44e51461039457600080fd5b80634c2ee09d116101235780634c2ee09d146102355780634dcc0aa6146102555780634f1ef2861461028257806352d1902d14610295578063602f9834146102b8578063715018a6146102d857600080fd5b80631eb7dd5e146101765780631f3a5830146101985780633659cfe6146101d55780633f9fdbe414610176578063462fdf83146101f55780634bdb55971461020857600080fd5b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004611945565b610496565b005b3480156101a457600080fd5b506101b86101b33660046119ac565b6104c7565b6040516001600160401b0390911681526020015b60405180910390f35b3480156101e157600080fd5b506101966101f0366004611a2b565b6105f5565b6101b8610203366004611a59565b6106dd565b34801561021457600080fd5b50610228610223366004611bbf565b61086f565b6040516101cc9190611d50565b34801561024157600080fd5b50610196610250366004611d63565b6108b4565b34801561026157600080fd5b50610275610270366004611d94565b61091d565b6040516101cc9190611dc8565b610196610290366004611def565b610a84565b3480156102a157600080fd5b506102aa610b54565b6040519081526020016101cc565b3480156102c457600080fd5b506101966102d3366004611d94565b610c07565b3480156102e457600080fd5b50610196610d3c565b3480156102f957600080fd5b50610196610d50565b34801561030e57600080fd5b5061019661031d366004611e52565b610dc7565b34801561032e57600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101cc565b34801561036057600080fd5b5061019661036f366004611eca565b610eff565b34801561038057600080fd5b5061019661038f366004611a2b565b610f81565b3480156103a057600080fd5b506102aa600181565b3480156103b557600080fd5b506101966103c4366004611a2b565b610fab565b3480156103d557600080fd5b5060975461033c906001600160a01b031681565b3480156103f557600080fd5b506065546001600160a01b031661033c565b34801561041357600080fd5b50610196610422366004611fbc565b6110bd565b34801561043357600080fd5b50610196610442366004611a2b565b6110f3565b34801561045357600080fd5b50610196610462366004611d63565b611164565b34801561047357600080fd5b50610228604051806040016040528060038152602001620312e360ec1b81525081565b6097546001600160a01b031633146104c1576040516321bf7f4960e01b815260040160405180910390fd5b50505050565b60008061053760405180608001604052806104e8336001600160a01b031690565b81526020016001815260200188815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525061118f565b60408051338152602081018990529192507f9831d8c66285bfd33de069ced58ad437d6bf08f63446bf06c3713e40b4b7e873910160405180910390a16097546040516330f8455760e21b81526001600160a01b039091169063c3e1155c906105a7908a908590889060040161200e565b6020604051808303816000875af11580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190612040565b979650505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106465760405162461bcd60e51b815260040161063d9061205d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661068f6000805160206125e9833981519152546001600160a01b031690565b6001600160a01b0316146106b55760405162461bcd60e51b815260040161063d906120a9565b6106be816111cb565b604080516000808252602082019092526106da918391906111d3565b50565b60975460408051608081019091526000916001600160a01b031690829061074f9080338152602001600181526020018b81526020018a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525061118f565b60408051338152602081018c90529192507f9831d8c66285bfd33de069ced58ad437d6bf08f63446bf06c3713e40b4b7e873910160405180910390a16040516330f8455760e21b81526001600160a01b0383169063c3e1155c906107bb908d9085908b9060040161200e565b6020604051808303816000875af11580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190612040565b609754604080518082018252929550610862926001600160a01b03909216918d918791908a9060029083908390808284376000920191909152505060408051808201825291508a906002908390839080828437600092019190915250611343915050565b5050979650505050505050565b6097546060906001600160a01b0316331461089d576040516321bf7f4960e01b815260040160405180910390fd5b6108a8868484611412565b98975050505050505050565b6108bc6114dc565b6097546040516381bc079b60e01b8152600481018390526001600160a01b03909116906381bc079b90602401600060405180830381600087803b15801561090257600080fd5b505af1158015610916573d6000803e3d6000fd5b5050505050565b6040805180820190915260008152606060208201526097546001600160a01b0316331461095d576040516321bf7f4960e01b815260040160405180910390fd5b600073__$f61eb90c6f674e787d51c07f105fa231e2$__63d5c39a9d61098660608601866120f5565b6040518363ffffffff1660e01b81526004016109a3929190612164565b600060405180830381865af41580156109c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109e891908101906121bd565b90506109f78160400151611536565b6001600160a01b0316635b761585610a12602086018661225f565b60200135836040518363ffffffff1660e01b8152600401610a349291906122b2565b6000604051808303816000875af1158015610a53573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7b91908101906122cb565b9150505b919050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610acc5760405162461bcd60e51b815260040161063d9061205d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b156000805160206125e9833981519152546001600160a01b031690565b6001600160a01b031614610b3b5760405162461bcd60e51b815260040161063d906120a9565b610b44826111cb565b610b50828260016111d3565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bf45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161063d565b506000805160206125e983398151915290565b6097546001600160a01b03163314610c32576040516321bf7f4960e01b815260040160405180910390fd5b600073__$f61eb90c6f674e787d51c07f105fa231e2$__63d5c39a9d610c5b60608501856120f5565b6040518363ffffffff1660e01b8152600401610c78929190612164565b600060405180830381865af4158015610c95573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cbd91908101906121bd565b9050610ccc8160000151611536565b6001600160a01b031663400d9f5d610ce4848061225f565b60200135836040518363ffffffff1660e01b8152600401610d069291906122b2565b600060405180830381600087803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b505050505050565b610d446114dc565b610d4e6000611547565b565b60655433906001600160a01b03168114610dbe5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161063d565b6106da81611547565b6097546001600160a01b03163314610df2576040516321bf7f4960e01b815260040160405180910390fd5b600073__$f61eb90c6f674e787d51c07f105fa231e2$__63d5c39a9d610e1b60608601866120f5565b6040518363ffffffff1660e01b8152600401610e38929190612164565b600060405180830381865af4158015610e55573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e7d91908101906121bd565b9050610e8c8160000151611536565b6001600160a01b031663588152ca610ea4858061225f565b6020013583856040518463ffffffff1660e01b8152600401610ec8939291906123a5565b600060405180830381600087803b158015610ee257600080fd5b505af1158015610ef6573d6000803e3d6000fd5b50505050505050565b610f076114dc565b60975460405163418925b760e01b81526001600160a01b039091169063418925b790610f45908b908b908b908b908b908b908b908b906004016123f7565b600060405180830381600087803b158015610f5f57600080fd5b505af1158015610f73573d6000803e3d6000fd5b505050505050505050505050565b610f896114dc565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1615808015610fcb5750600054600160ff909116105b80610fe55750303b158015610fe5575060005460ff166001145b6110485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161063d565b6000805460ff19166001179055801561106b576000805461ff0019166101001790555b61107482611560565b8015610b50576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6097546001600160a01b031633146110e8576040516321bf7f4960e01b815260040160405180910390fd5b610916848383611412565b6110fb6114dc565b606580546001600160a01b0383166001600160a01b0319909116811790915561112c6033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6097546001600160a01b031633146106da576040516321bf7f4960e01b815260040160405180910390fd5b8051602080830151604080850151606086810151925190956111b59590949391016124b5565b6040516020818303038152906040529050919050565b6106da6114dc565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561120b576112068361158f565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611265575060408051601f3d908101601f19168201909252611262918101906124e9565b60015b6112c85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161063d565b6000805160206125e983398151915281146113375760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161063d565b5061120683838361162b565b846001600160a01b031663478222c26040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a79190612502565b6001600160a01b03166318e3404b34868686866040518663ffffffff1660e01b81526004016113d99493929190612542565b6000604051808303818588803b1580156113f257600080fd5b505af1158015611406573d6000803e3d6000fd5b50505050505050505050565b6060604051806040016040528060038152602001620312e360ec1b815250604051602001611440919061257b565b60405160208183030381529060405280519060200120838360405160200161146992919061258d565b604051602081830303815290604052805190602001201461149d5760405163b01318a560e01b815260040160405180910390fd5b82828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092979650505050505050565b6033546001600160a01b03163314610d4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063d565b600061154182611650565b92915050565b606580546001600160a01b03191690556106da816116bd565b600054610100900460ff166115875760405162461bcd60e51b815260040161063d9061259d565b610f8961170f565b6001600160a01b0381163b6115fc5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161063d565b6000805160206125e983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6116348361173e565b6000825111806116415750805b15611206576104c1838361177e565b60006001600160a01b038211156116b95760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663630206269747360c81b606482015260840161063d565b5090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117365760405162461bcd60e51b815260040161063d9061259d565b610d4e6117aa565b6117478161158f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606117a38383604051806060016040528060278152602001612609602791396117da565b9392505050565b600054610100900460ff166117d15760405162461bcd60e51b815260040161063d9061259d565b610d4e33611547565b6060600080856001600160a01b0316856040516117f7919061257b565b600060405180830381855af49150503d8060008114611832576040519150601f19603f3d011682016040523d82523d6000602084013e611837565b606091505b509150915061184886838387611852565b9695505050505050565b606083156118c15782516000036118ba576001600160a01b0385163b6118ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063d565b50816118cb565b6118cb83836118d3565b949350505050565b8151156118e35781518083602001fd5b8060405162461bcd60e51b815260040161063d9190611d50565b60008083601f84011261190f57600080fd5b5081356001600160401b0381111561192657600080fd5b60208301915083602082850101111561193e57600080fd5b9250929050565b6000806000806060858703121561195b57600080fd5b8435935060208501356001600160401b0381111561197857600080fd5b611984878288016118fd565b9598909750949560400135949350505050565b6001600160401b03811681146106da57600080fd5b6000806000806000608086880312156119c457600080fd5b853594506020860135935060408601356001600160401b038111156119e857600080fd5b6119f4888289016118fd565b9094509250506060860135611a0881611997565b809150509295509295909350565b6001600160a01b03811681146106da57600080fd5b600060208284031215611a3d57600080fd5b81356117a381611a16565b806040810183101561154157600080fd5b6000806000806000806000610100888a031215611a7557600080fd5b873596506020880135955060408801356001600160401b03811115611a9957600080fd5b611aa58a828b016118fd565b9096509450506060880135611ab981611997565b9250611ac88960808a01611a48565b9150611ad78960c08a01611a48565b905092959891949750929550565b803560038110610a7f57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611b3257611b32611af4565b604052919050565b60006001600160401b03821115611b5357611b53611af4565b50601f01601f191660200190565b6000611b74611b6f84611b3a565b611b0a565b9050828152838383011115611b8857600080fd5b828260208301376000602084830101529392505050565b600082601f830112611bb057600080fd5b6117a383833560208501611b61565b600080600080600080600060c0888a031215611bda57600080fd5b611be388611ae5565b965060208801356001600160401b0380821115611bff57600080fd5b818a0191508a601f830112611c1357600080fd5b813581811115611c2557611c25611af4565b8060051b611c3560208201611b0a565b9182526020818501810192908101908e841115611c5157600080fd5b6020860192505b83831015611c8f578483351115611c6e57600080fd5b611c7e8f60208535890101611b9f565b825260209283019290910190611c58565b9a5050505060408a0135965060608a0135915080821115611caf57600080fd5b611cbb8b838c01611b9f565b955060808a0135945060a08a0135915080821115611cd857600080fd5b50611ce58a828b016118fd565b989b979a50959850939692959293505050565b60005b83811015611d13578181015183820152602001611cfb565b838111156104c15750506000910152565b60008151808452611d3c816020860160208601611cf8565b601f01601f19169290920160200192915050565b6020815260006117a36020830184611d24565b600060208284031215611d7557600080fd5b5035919050565b600060e08284031215611d8e57600080fd5b50919050565b600060208284031215611da657600080fd5b81356001600160401b03811115611dbc57600080fd5b6118cb84828501611d7c565b60208152815115156020820152600060208301516040808401526118cb6060840182611d24565b60008060408385031215611e0257600080fd5b8235611e0d81611a16565b915060208301356001600160401b03811115611e2857600080fd5b8301601f81018513611e3957600080fd5b611e4885823560208401611b61565b9150509250929050565b60008060408385031215611e6557600080fd5b82356001600160401b0380821115611e7c57600080fd5b611e8886838701611d7c565b93506020850135915080821115611e9e57600080fd5b50830160408186031215611eb157600080fd5b809150509250929050565b80151581146106da57600080fd5b60008060008060008060008060a0898b031215611ee657600080fd5b88356001600160401b0380821115611efd57600080fd5b611f098c838d016118fd565b909a509850889150611f1d60208c01611ae5565b975060408b01359150611f2f82611ebc565b90955060608a01359080821115611f4557600080fd5b818b0191508b601f830112611f5957600080fd5b813581811115611f6857600080fd5b8c60208260051b8501011115611f7d57600080fd5b6020830196508095505060808b0135915080821115611f9b57600080fd5b50611fa88b828c016118fd565b999c989b5096995094979396929594505050565b60008060008060608587031215611fd257600080fd5b843593506020850135925060408501356001600160401b03811115611ff657600080fd5b612002878288016118fd565b95989497509550505050565b8381526060602082015260006120276060830185611d24565b90506001600160401b0383166040830152949350505050565b60006020828403121561205257600080fd5b81516117a381611997565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808335601e1984360301811261210c57600080fd5b8301803591506001600160401b0382111561212657600080fd5b60200191503681900382131561193e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006118cb60208301848661213b565b600082601f83011261218957600080fd5b8151612197611b6f82611b3a565b8181528460208386010111156121ac57600080fd5b6118cb826020830160208701611cf8565b6000602082840312156121cf57600080fd5b81516001600160401b03808211156121e657600080fd5b90830190608082860312156121fa57600080fd5b60405160808101818110838211171561221557612215611af4565b806040525082518152602083015160208201526040830151604082015260608301518281111561224457600080fd5b61225087828601612178565b60608301525095945050505050565b60008235603e1983360301811261227557600080fd5b9190910192915050565b80518252602081015160208301526040810151604083015260006060820151608060608501526118cb6080850182611d24565b8281526040602082015260006118cb604083018461227f565b6000602082840312156122dd57600080fd5b81516001600160401b03808211156122f457600080fd5b908301906040828603121561230857600080fd5b60405160408101818110838211171561232357612323611af4565b604052825161233181611ebc565b815260208301518281111561234557600080fd5b61235187828601612178565b60208301525095945050505050565b6000808335601e1984360301811261237757600080fd5b83016020810192503590506001600160401b0381111561239657600080fd5b80360382131561193e57600080fd5b8381526060602082015260006123be606083018561227f565b828103604084015283356123d181611ebc565b151581526123e26020850185612360565b604060208401526108a860408401828461213b565b60a08152600061240b60a083018a8c61213b565b602060038a1061242b57634e487b7160e01b600052602160045260246000fd5b8381018a905288151560408501528382036060850152868252818101600588901b830182018960005b8a81101561248e57858303601f1901845261246f828d612360565b61247a85828461213b565b958701959450505090840190600101612454565b505085810360808701526124a381888a61213b565b9e9d5050505050505050505050505050565b848152836020820152826040820152600082516124d9816060850160208701611cf8565b9190910160600195945050505050565b6000602082840312156124fb57600080fd5b5051919050565b60006020828403121561251457600080fd5b81516117a381611a16565b8060005b60028110156104c1578151845260209384019390910190600101612523565b8481526001600160401b038416602082015260c08101612565604083018561251f565b612572608083018461251f565b95945050505050565b60008251612275818460208701611cf8565b8183823760009101908152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220522bf5a8f5fa74350346a8e42d2807c604518ff43effb1c0a8e36d896e4fb0c764736f6c634300080f0033";

type UniversalChannelHandlerConstructorParams =
  | [
      linkLibraryAddresses: UniversalChannelHandlerLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalChannelHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UniversalChannelHandler__factory extends ContractFactory {
  constructor(...args: UniversalChannelHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UniversalChannelHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: UniversalChannelHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f61eb90c6f674e787d51c07f105fa231e2\\$__", "g"),
      linkLibraryAddresses["contracts/libs/IbcUtils.sol:IbcUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniversalChannelHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UniversalChannelHandler__factory {
    return super.connect(runner) as UniversalChannelHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalChannelHandlerInterface {
    return new Interface(_abi) as UniversalChannelHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniversalChannelHandler {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UniversalChannelHandler;
  }
}

export interface UniversalChannelHandlerLibraryAddresses {
  ["contracts/libs/IbcUtils.sol:IbcUtils"]: string;
}
