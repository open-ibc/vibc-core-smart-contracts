/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OptimisticLightClient,
  OptimisticLightClientInterface,
} from "../OptimisticLightClient";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "fraudProofWindowSeconds_",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "verifier_",
        type: "address",
        internalType: "contract IProofVerifier",
      },
      {
        name: "_l1BlockProvider",
        type: "address",
        internalType: "contract L1Block",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "consensusStates",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fraudProofEndtime",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fraudProofWindowSeconds",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFraudProofEndtime",
    inputs: [
      {
        name: "peptideHeight",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "fraudProofEndTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLightClientType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum LightClientType",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getState",
    inputs: [
      {
        name: "peptideHeight",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "peptideAppHash",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStateAndEndTime",
    inputs: [
      {
        name: "peptideHeight",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "peptideAppHash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "fraudProofEndTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ended",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "l1BlockProvider",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract L1Block",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateClient",
    inputs: [
      {
        name: "proof",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "peptideHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "peptideAppHash",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifier",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IProofVerifier",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "key",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "expectedValue",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "proof",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "key",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "AppHashHasNotPassedFraudProofWindow",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotUpdatePendingOptimisticConsensusState",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161100138038061100183398101604081905261002f91610084565b63ffffffff92909216600255600380546001600160a01b039283166001600160a01b031991821617909155600480549290931691161790556100da565b6001600160a01b038116811461008157600080fd5b50565b60008060006060848603121561009957600080fd5b835163ffffffff811681146100ad57600080fd5b60208501519093506100be8161006c565b60408501519092506100cf8161006c565b809150509250925092565b610f18806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636304272011610071578063630427201461017b578063b9a1e87b14610184578063cb535ab5146101b4578063d56ff842146101c7578063eb772058146101f2578063fdaab4e51461020557600080fd5b80631b738a22146100b95780632b7ac3f3146100ec57806334b80a411461011757806336028d2a1461013757806344c9af281461014657806349ff245e14610166575b600080fd5b6100d96100c7366004610594565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b6003546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b6100d9610125366004610594565b60016020526000908152604090205481565b60016040516100e391906105ad565b6100d9610154366004610594565b60009081526020819052604090205490565b61017961017436600461061d565b610218565b005b6100d960025481565b610197610192366004610594565b6103d8565b6040805193845260208401929092521515908201526060016100e3565b6101796101c2366004610685565b6103f3565b6100d96101d5366004610594565b600090815260208181526040808320548352600190915290205490565b6004546100ff906001600160a01b031681565b610179610213366004610719565b6104a3565b60008061022785870187610998565b6000868152602081905260408120549294509092508190036103af576003546004805460408051624dead360e51b815290516001600160a01b0394851694630a1bb8b594899489948c9493909116926309bd5a60928281019260209291908290030181865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c29190610a4b565b60048054604080516341c0fac560e11b815290516001600160a01b0390921692638381f58a9282820192602092908290030181865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610a64565b6040518663ffffffff1660e01b815260040161034d959493929190610b16565b60006040518083038186803b15801561036557600080fd5b505afa158015610379573d6000803e3d6000fd5b50505060008681526020819052604090208590555060025461039b9042610be3565b6000858152600160205260409020556103cf565b8381146103cf5760405163f0cd4ed960e01b815260040160405180910390fd5b50505050505050565b60008060006103e684610548565b9250925092509193909250565b60008061040d610408600160208a0135610bfb565b610548565b92505091508061043057604051631234d8dd60e01b815260040160405180910390fd5b60035460405163c2f0329f60e01b81526001600160a01b039091169063c2f0329f9061046a9085908a908a908a908a908f90600401610e6a565b60006040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b5050505050505050505050565b6000806104b861040860016020880135610bfb565b9250509150806104db57604051631234d8dd60e01b815260040160405180910390fd5b600354604051630a9b7b5d60e21b81526001600160a01b0390911690632a6ded7490610511908590889088908b90600401610eab565b60006040518083038186803b15801561052957600080fd5b505afa15801561053d573d6000803e3d6000fd5b505050505050505050565b600081815260208181526040808320548084526001909252822054829182918190811580159061058657506000838152600160205260409020544210155b935093509350509193909250565b6000602082840312156105a657600080fd5b5035919050565b60208101600383106105cf57634e487b7160e01b600052602160045260246000fd5b91905290565b60008083601f8401126105e757600080fd5b5081356001600160401b038111156105fe57600080fd5b60208301915083602082850101111561061657600080fd5b9250929050565b6000806000806060858703121561063357600080fd5b84356001600160401b0381111561064957600080fd5b610655878288016105d5565b90989097506020870135966040013595509350505050565b60006040828403121561067f57600080fd5b50919050565b60008060008060006060868803121561069d57600080fd5b85356001600160401b03808211156106b457600080fd5b6106c089838a0161066d565b965060208801359150808211156106d657600080fd5b6106e289838a016105d5565b909650945060408801359150808211156106fb57600080fd5b50610708888289016105d5565b969995985093965092949392505050565b60008060006040848603121561072e57600080fd5b83356001600160401b038082111561074557600080fd5b6107518783880161066d565b9450602086013591508082111561076757600080fd5b50610774868287016105d5565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156107b9576107b9610781565b60405290565b604051601f8201601f191681016001600160401b03811182821017156107e7576107e7610781565b604052919050565b6000601f838184011261080157600080fd5b823560206001600160401b038083111561081d5761081d610781565b8260051b61082c8382016107bf565b938452868101830193838101908986111561084657600080fd5b84890192505b858310156108d6578235848111156108645760008081fd5b8901603f81018b136108765760008081fd5b8581013560408682111561088c5761088c610781565b61089d828b01601f191689016107bf565b8281528d828486010111156108b25760008081fd5b828285018a830137600092810189019290925250835250918401919084019061084c565b9998505050505050505050565b6001600160401b03811681146108f857600080fd5b50565b60006080828403121561090d57600080fd5b604051608081016001600160401b03828210818311171561093057610930610781565b81604052829350843591508082111561094857600080fd5b610954868387016107ef565b8352602085013591508082111561096a57600080fd5b50610977858286016107ef565b60208301525060408301356040820152606083013560608201525092915050565b600080604083850312156109ab57600080fd5b82356001600160401b03808211156109c257600080fd5b90840190606082870312156109d657600080fd5b6109de610797565b8235828111156109ed57600080fd5b6109f9888286016107ef565b8252506020830135602082015260408301359250610a16836108e3565b826040820152809450506020850135915080821115610a3457600080fd5b50610a41858286016108fb565b9150509250929050565b600060208284031215610a5d57600080fd5b5051919050565b600060208284031215610a7657600080fd5b8151610a81816108e3565b9392505050565b600081518084526020808501808196508360051b810191508286016000805b86811015610b08578385038a5282518051808752835b81811015610ad8578281018901518882018a01528801610abd565b81811115610ae8578489838a0101525b509a87019a601f01601f1916959095018601945091850191600101610aa7565b509298975050505050505050565b60a0815260008651606060a0840152610b33610100840182610a88565b9050602088015160c08401526001600160401b0360408901511660e08401528281036020840152865160808252610b6d6080830182610a88565b905060208801518282036020840152610b868282610a88565b91505060408801516040830152606088015160608301528092505050846040830152836060830152610bc360808301846001600160401b03169052565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bf657610bf6610bcd565b500190565b600082821015610c0d57610c0d610bcd565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112610c5257600080fd5b83016020810192503590506001600160401b03811115610c7157600080fd5b8060051b360382131561061657600080fd5b6000808335601e19843603018112610c9a57600080fd5b83016020810192503590506001600160401b03811115610cb957600080fd5b80360382131561061657600080fd5b600060408301610cd88384610c3b565b604086528281845260608701905060608260051b88010193508260005b83811015610e5157888603605f1901835236859003607e1901823512610d1a57600080fd5b8482350160808701610d2c8283610c3b565b60808a528281845260a08b01905060a08260051b8c010193508260005b83811015610dca578c8603609f19018352813536869003603e19018112610d6f57600080fd5b8501610d7b8180610c83565b60408952610d8d60408a018284610c12565b915050610d9d6020830183610c83565b925088820360208a0152610db2828483610c12565b98505050602093840193929092019150600101610d49565b5050505050610ddc6020830183610c83565b89830360208b0152610def838284610c12565b92505050610e006040830183610c83565b89830360408b0152610e13838284610c12565b92505050610e246060830183610c83565b925088820360608a0152610e39828483610c12565b98505050602093840193929092019150600101610cf5565b5050505050602083013560208501528091505092915050565b868152608060208201526000610e84608083018789610c12565b8281036040840152610e97818688610c12565b905082810360608401526108d68185610cc8565b848152606060208201526000610ec5606083018587610c12565b8281036040840152610ed78185610cc8565b97965050505050505056fea264697066735822122003601f79d87e88d751eb93c7f1683ec75618b19bb10f5677030ef66d45ebaa5564736f6c634300080f0033";

type OptimisticLightClientConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimisticLightClientConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimisticLightClient__factory extends ContractFactory {
  constructor(...args: OptimisticLightClientConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    fraudProofWindowSeconds_: BigNumberish,
    verifier_: AddressLike,
    _l1BlockProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      fraudProofWindowSeconds_,
      verifier_,
      _l1BlockProvider,
      overrides || {}
    );
  }
  override deploy(
    fraudProofWindowSeconds_: BigNumberish,
    verifier_: AddressLike,
    _l1BlockProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      fraudProofWindowSeconds_,
      verifier_,
      _l1BlockProvider,
      overrides || {}
    ) as Promise<
      OptimisticLightClient & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OptimisticLightClient__factory {
    return super.connect(runner) as OptimisticLightClient__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimisticLightClientInterface {
    return new Interface(_abi) as OptimisticLightClientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OptimisticLightClient {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OptimisticLightClient;
  }
}
