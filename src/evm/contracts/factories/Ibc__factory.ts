/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Ibc, IbcInterface } from "../Ibc";

const _abi = [
  {
    type: "function",
    name: "ackProofKey",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "proofKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "ackProofValue",
    inputs: [
      {
        name: "ack",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "proofValue",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "bytesToAddr",
    inputs: [
      {
        name: "a",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "channelProofKey",
    inputs: [
      {
        name: "portId",
        type: "string",
        internalType: "string",
      },
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "proofKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "channelProofKeyMemory",
    inputs: [
      {
        name: "portId",
        type: "string",
        internalType: "string",
      },
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "proofKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "channelProofValue",
    inputs: [
      {
        name: "state",
        type: "ChannelState",
        internalType: "enum ChannelState",
      },
      {
        name: "ordering",
        type: "ChannelOrder",
        internalType: "enum ChannelOrder",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "connectionHops",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "counterpartyPortId",
        type: "string",
        internalType: "string",
      },
      {
        name: "counterpartyChannelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "proofValue",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "channelProofValueMemory",
    inputs: [
      {
        name: "state",
        type: "ChannelState",
        internalType: "enum ChannelState",
      },
      {
        name: "ordering",
        type: "ChannelOrder",
        internalType: "enum ChannelOrder",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "connectionHops",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "counterpartyPortId",
        type: "string",
        internalType: "string",
      },
      {
        name: "counterpartyChannelId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "proofValue",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "packetCommitmentProofKey",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "proofKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "packetCommitmentProofValue",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct IbcPacket",
        components: [
          {
            name: "src",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "dest",
            type: "tuple",
            internalType: "struct IbcEndpoint",
            components: [
              {
                name: "portId",
                type: "string",
                internalType: "string",
              },
              {
                name: "channelId",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "sequence",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutHeight",
            type: "tuple",
            internalType: "struct Height",
            components: [
              {
                name: "revision_number",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "revision_height",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "proofValue",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "parseAckData",
    inputs: [
      {
        name: "ack",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "ackData",
        type: "tuple",
        internalType: "struct AckPacket",
        components: [
          {
            name: "success",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "toStr",
    inputs: [
      {
        name: "b",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "outStr",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "toStr",
    inputs: [
      {
        name: "_number",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "outStr",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "error",
    name: "invalidAddressBytes",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x611c6b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100be5760003560e01c80635ef6228c1161007b5780635ef6228c146101585780636f6547261461018357806374e970451461019657806391d6df7d146101b7578063fb10f0a8146101ca578063fc8f29da146101dd57600080fd5b806311a7a373146100c35780631dcd0305146100ec57806325e0dd0e146100ff578063360b8cd7146101125780634b5728d1146101325780634f9b0fb314610145575b600080fd5b6100d66100d1366004611188565b6101f0565b6040516100e3919061121e565b60405180910390f35b6100d66100fa366004611231565b61026c565b6100d661010d3660046112b0565b610376565b6101256101203660046113a3565b61046b565b6040516100e391906113e4565b6100d6610140366004611188565b6105a8565b6100d661015336600461140b565b6105f1565b61016b6101663660046114f3565b610628565b6040516001600160a01b0390911681526020016100e3565b6100d661019136600461155b565b610654565b6101a96101a43660046113a3565b610688565b6040519081526020016100e3565b6100d66101c5366004611231565b6106dc565b6100d66101d8366004611623565b6107f0565b6101a96101eb366004611188565b61086f565b60606101ff60208301836116eb565b610209908061170b565b61022261021960208601866116eb565b6020013561026c565b6102436102356060870160408801611751565b6001600160401b03166106dc565b604051602001610256949392919061177a565b6040516020818303038152906040529050919050565b606060005b60208160ff161080156102a55750828160ff1660208110610294576102946117f8565b1a60f81b6001600160f81b03191615155b156102bc57806102b481611824565b915050610271565b60008160ff166001600160401b038111156102d9576102d9611456565b6040519080825280601f01601f191660200182016040528015610303576020820181803683370190505b50905060005b8260ff168160ff16101561036e57848160ff166020811061032c5761032c6117f8565b1a60f81b828260ff1681518110610345576103456117f8565b60200101906001600160f81b031916908160001a9053508061036681611824565b915050610309565b509392505050565b606061045d6040518060a001604052808c600981111561039857610398611843565b60030b81526020018b60028111156103b2576103b2611843565b60030b8152602001604051806040016040528088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161040a8761026c565b9052815260200161041b888a611859565b81526020018a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250610999565b9a9950505050505050505050565b6040805180820190915260008152606060208201527fcf118b5b37063214cf5ee4e00a21cbc1f63c9adff4e41aef620d6c96005c7a256104af600960018587611866565b6040516104bd929190611890565b6040518091039020146105335760408051808201909152600081526020810184600a856104eb6002826118a0565b926104f893929190611866565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506105a1565b60408051808201909152600181526020810161059e85600b866105576002826118a0565b9261056493929190611866565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0192505050565b90525b9392505050565b60606105b482806116eb565b6105be908061170b565b6105cb61021985806116eb565b6105de6102356060870160408801611751565b60405160200161025694939291906118b7565b606083836105fe8461026c565b6040516020016106109392919061193b565b60405160208183030381529060405290509392505050565b6000815160141461064c576040516324a2f74960e01b815260040160405180910390fd5b506014015190565b6060826106608361026c565b604051602001610671929190611992565b604051602081830303815290604052905092915050565b60006002838360405161069c929190611890565b602060405180830381855afa1580156106b9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105a191906119f5565b6060816000036107035750506040805180820190915260018152600360fc1b602082015290565b6000825b801561072d578161071781611a0e565b92506107269050600a82611a3d565b9050610707565b6000826001600160401b0381111561074757610747611456565b6040519080825280601f01601f191660200182016040528015610771576020820181803683370190505b509050825b80156107e757610787600a87611a51565b610792906030611a65565b60f81b826107a16001846118a0565b815181106107b1576107b16117f8565b60200101906001600160f81b031916908160001a9053506107d3600a87611a3d565b9550806107df81611a7d565b915050610776565b50949350505050565b60606108646040518060a0016040528089600981111561081257610812611843565b60030b815260200188600281111561082c5761082c611843565b60030b8152602001604051806040016040528087815260200161084e8761026c565b9052815260208101879052604001879052610999565b979650505050505050565b6000600261088360e0840160c08501611751565b61089360a0850160808601611751565b6108a360c0860160a08701611751565b60026108b2606088018861170b565b6040516108c0929190611890565b602060405180830381855afa1580156108dd573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061090091906119f5565b6040516001600160c01b031960c095861b8116602083015293851b841660288201529190931b9091166030820152603881019190915260580160408051601f198184030181529082905261095391611a94565b602060405180830381855afa158015610970573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061099391906119f5565b92915050565b606060006109a683610bb6565b6001600160401b038111156109bd576109bd611456565b6040519080825280601f01601f1916602001820160405280156109e7576020820181803683370190505b50905060006109f884602084610cbc565b82525092915050565b80516060908290600003610a2557604080516000808252602082019092529061036e565b60048151610a339190611a51565b15610a845760405162461bcd60e51b815260206004820152601c60248201527f696e76616c696420626173653634206465636f64657220696e70757400000000604482015260640160405180910390fd5b60006040518060a0016040528060808152602001611bb6608091399050600060048351610ab19190611a3d565b610abc906003611aa6565b90506000610acb826020611a65565b6001600160401b03811115610ae257610ae2611456565b6040519080825280601f01601f191660200182016040528015610b0c576020820181803683370190505b5090508351840151603d60ff821603610b3957600183039250613d3d61ffff821603610b39576001830392505b50818152600183018485518101602084015b81831015610ba857600483019250825160ff8082168601511660ff808360081c168701511660061b0160ff808360101c1687015116600c1b60ff808460181c168801511660121b010190508060e81b825250600381019050610b4b565b509298975050505050505050565b6000806000610bc88460000151610e46565b610bd3906001611a65565b610bdd9083611a65565b9150610bec8460200151610e46565b610bf7906001611a65565b610c019083611a65565b9150610c18610c138560400151610e6f565b610eba565b610c23906001611a65565b610c2d9083611a65565b9150600090505b836060015151811015610c9157610c6884606001518281518110610c5a57610c5a6117f8565b602002602001015151610eba565b610c73906001611a65565b610c7d9083611a65565b915080610c8981611a0e565b915050610c34565b610c9f846080015151610eba565b610caa906001611a65565b610cb49083611a65565b949350505050565b825160009083908190839060030b15610d0557610cdd600160008488610ecf565b610ce79083611a65565b9150610cf887600001518387610eef565b610d029083611a65565b91505b602087015160030b15610d4857610d20600260008488610ecf565b610d2a9083611a65565b9150610d3b87602001518387610eef565b610d459083611a65565b91505b610d56600360028488610ecf565b610d609083611a65565b9150610d7187604001518387610f0f565b610d7b9083611a65565b9150866060015151600014610dfb575060005b866060015151811015610dfb57610da9600460028488610ecf565b610db39083611a65565b9150610ddd87606001518281518110610dce57610dce6117f8565b60200260200101518387610fc2565b610de79083611a65565b915080610df381611a0e565b915050610d8e565b60808701515115610e3c57610e14600560028488610ecf565b610e1e9083611a65565b9150610e2f87608001518387610fc2565b610e399083611a65565b91505b61086483836118a0565b6000808260030b1215610e5b5750600a919050565b6109938263ffffffff16610fcf565b919050565b600080610e80836000015151610eba565b610e8b906001611a65565b610e959082611a65565b9050610ea5836020015151610eba565b610eb0906001611a65565b6105a19082611a65565b6000610ec582610fcf565b6109939083611a65565b6000600885026007851617610ee5818585610fec565b9695505050505050565b600083610f066001600160401b0382168585610fec565b95945050505050565b6000828082610f1d87610e6f565b6001600160401b03811115610f3457610f34611456565b6040519080825280601f01601f191660200182016040528015610f5e576020820181803683370190505b50905080856000610f718a60208561102f565b9050610f7e81868a610fec565b610f889086611a65565b9450610fa8610f98846020611a65565b610fa28785611a65565b836110be565b610fb28186611a65565b94506060935061045d86866118a0565b6000610cb484848461113d565b60071c600060015b82156109935760079290921c91600101610fd7565b600080828401607f86165b600787901c1561101f578060801782535060079590951c9460019182019101607f8616610ff7565b8082535050600101949350505050565b82515160009083908190156110745761104c600160028387610ecf565b6110569082611a65565b905061106786600001518286610fc2565b6110719082611a65565b90505b602086015151156110b45761108c6002808387610ecf565b6110969082611a65565b90506110a786602001518286610fc2565b6110b19082611a65565b90505b610ee582826118a0565b806000036110cb57505050565b602081111561110457825182526110e3602083611a65565b91506110f0602084611a65565b92506110fd6020826118a0565b90506110cb565b600060016111138360206118a0565b61111f90610100611ba9565b61112991906118a0565b935183518516941916939093179091525050565b82516000908161114e828686610fec565b905060008186018501602088015b8483101561117b57805160001a8253600192830192918201910161115c565b5061086490508183611a65565b60006020828403121561119a57600080fd5b81356001600160401b038111156111b057600080fd5b820160e081850312156105a157600080fd5b60005b838110156111dd5781810151838201526020016111c5565b838111156111ec576000848401525b50505050565b6000815180845261120a8160208601602086016111c2565b601f01601f19169290920160200192915050565b6020815260006105a160208301846111f2565b60006020828403121561124357600080fd5b5035919050565b8035600a8110610e6a57600080fd5b803560038110610e6a57600080fd5b60008083601f84011261127a57600080fd5b5081356001600160401b0381111561129157600080fd5b6020830191508360208285010111156112a957600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156112ce57600080fd5b6112d78a61124a565b98506112e560208b01611259565b975060408a01356001600160401b038082111561130157600080fd5b61130d8d838e01611268565b909950975060608c013591508082111561132657600080fd5b818c0191508c601f83011261133a57600080fd5b81358181111561134957600080fd5b8d60208260051b850101111561135e57600080fd5b6020830197508096505060808c013591508082111561137c57600080fd5b506113898c828d01611268565b9a9d999c50979a9699959894979660a00135949350505050565b600080602083850312156113b657600080fd5b82356001600160401b038111156113cc57600080fd5b6113d885828601611268565b90969095509350505050565b6020815281511515602082015260006020830151604080840152610cb460608401826111f2565b60008060006040848603121561142057600080fd5b83356001600160401b0381111561143657600080fd5b61144286828701611268565b909790965060209590950135949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561149457611494611456565b604052919050565b60006001600160401b038311156114b5576114b5611456565b6114c8601f8401601f191660200161146c565b90508281528383830111156114dc57600080fd5b828260208301376000602084830101529392505050565b60006020828403121561150557600080fd5b81356001600160401b0381111561151b57600080fd5b8201601f8101841361152c57600080fd5b610cb48482356020840161149c565b600082601f83011261154c57600080fd5b6105a18383356020850161149c565b6000806040838503121561156e57600080fd5b82356001600160401b0381111561158457600080fd5b6115908582860161153b565b95602094909401359450505050565b60006001600160401b03808411156115b9576115b9611456565b8360051b60206115ca81830161146c565b868152935090840190808401878311156115e357600080fd5b855b83811015611617578035858111156115fd5760008081fd5b6116098a828a0161153b565b8352509082019082016115e5565b50505050509392505050565b60008060008060008060c0878903121561163c57600080fd5b6116458761124a565b955061165360208801611259565b945060408701356001600160401b038082111561166f57600080fd5b61167b8a838b0161153b565b9550606089013591508082111561169157600080fd5b818901915089601f8301126116a557600080fd5b6116b48a83356020850161159f565b945060808901359150808211156116ca57600080fd5b506116d789828a0161153b565b92505060a087013590509295509295509295565b60008235603e1983360301811261170157600080fd5b9190910192915050565b6000808335601e1984360301811261172257600080fd5b8301803591506001600160401b0382111561173c57600080fd5b6020019150368190038213156112a957600080fd5b60006020828403121561176357600080fd5b81356001600160401b03811681146105a157600080fd5b6a61636b732f706f7274732f60a81b81528385600b8301376000848201692f6368616e6e656c732f60b01b600b82015284516117bd8160158401602089016111c2565b8082019150506a2f73657175656e6365732f60a81b601582015283516117ea8160208401602088016111c2565b016020019695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810361183a5761183a61180e565b60010192915050565b634e487b7160e01b600052602160045260246000fd5b60006105a136848461159f565b6000808585111561187657600080fd5b8386111561188357600080fd5b5050820193919092039150565b8183823760009101908152919050565b6000828210156118b2576118b261180e565b500390565b71636f6d6d69746d656e74732f706f7274732f60701b8152838560128301376000848201692f6368616e6e656c732f60b01b6012820152845161190181601c8401602089016111c2565b6a2f73657175656e6365732f60a81b601c9290910191820152835161192d8160278401602088016111c2565b016027019695505050505050565b716368616e6e656c456e64732f706f7274732f60701b8152828460128301376000838201692f6368616e6e656c732f60b01b6012820152835161198581601c8401602088016111c2565b01601c0195945050505050565b716368616e6e656c456e64732f706f7274732f60701b8152600083516119bf8160128501602088016111c2565b692f6368616e6e656c732f60b01b60129184019182015283516119e981601c8401602088016111c2565b01601c01949350505050565b600060208284031215611a0757600080fd5b5051919050565b600060018201611a2057611a2061180e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a4c57611a4c611a27565b500490565b600082611a6057611a60611a27565b500690565b60008219821115611a7857611a7861180e565b500190565b600081611a8c57611a8c61180e565b506000190190565b600082516117018184602087016111c2565b6000816000190483118215151615611ac057611ac061180e565b500290565b600181815b80851115611b00578160001904821115611ae657611ae661180e565b80851615611af357918102915b93841c9390800290611aca565b509250929050565b600082611b1757506001610993565b81611b2457506000610993565b8160018114611b3a5760028114611b4457611b60565b6001915050610993565b60ff841115611b5557611b5561180e565b50506001821b610993565b5060208310610133831016604e8410600b8410161715611b83575081810a610993565b611b8d8383611ac5565b8060001904821115611ba157611ba161180e565b029392505050565b60006105a18383611b0856fe000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000a2646970667358221220e7e9e5abddcb2b20a160a3c8a1dcfca4b18ee317d40e75bff4cb9ff81423aebf64736f6c634300080f0033";

type IbcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IbcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ibc__factory extends ContractFactory {
  constructor(...args: IbcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Ibc & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ibc__factory {
    return super.connect(runner) as Ibc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IbcInterface {
    return new Interface(_abi) as IbcInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ibc {
    return new Contract(address, _abi, runner) as unknown as Ibc;
  }
}
