/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SequencerSignatureVerifier,
  SequencerSignatureVerifierInterface,
} from "../SequencerSignatureVerifier";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "sequencer_",
        type: "address",
        internalType: "address",
      },
      {
        name: "chainId_",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CHAIN_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SEQUENCER",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyMembership",
    inputs: [
      {
        name: "appHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "key",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "proofs",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyNonMembership",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct Ics23Proof",
        components: [
          {
            name: "proof",
            type: "tuple[]",
            internalType: "struct OpIcs23Proof[]",
            components: [
              {
                name: "path",
                type: "tuple[]",
                internalType: "struct OpIcs23ProofPath[]",
                components: [
                  {
                    name: "prefix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "suffix",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "key",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "value",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "prefix",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "verifyStateUpdate",
    inputs: [
      {
        name: "l2BlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "appHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "l1BlockHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "InvalidAppHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidIbcStateProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidL1BlockHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidL1BlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPacketProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProofKey",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProofValue",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRLPEncodedL1BlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRLPEncodedL1StateRoot",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSequencerSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "MethodNotImplemented",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610e39380380610e3983398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a051610d896100b06000396000818160ba0152610584015260008181607601526105ee0152610d896000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632a6ded741461005c57806375fd4ca91461007157806385e1f4d0146100b5578063c2f0329f146100ea578063e8d90039146100fd575b600080fd5b61006f61006a3660046109a3565b610110565b005b6100987f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100ac565b61006f6100f8366004610a16565b610129565b61006f61010b366004610ab2565b610313565b604051632974974360e01b815260040160405180910390fd5b6101338180610b13565b600081811061014457610144610b5d565b90506020028101906101569190610b73565b610164906020810190610b93565b604051610172929190610bda565b6040518091039020858560405161018a929190610bda565b6040518091039020146101b05760405163026a287560e51b815260040160405180910390fd5b6101ba8180610b13565b60008181106101cb576101cb610b5d565b90506020028101906101dd9190610b73565b6101eb906040810190610b93565b6040516101f9929190610bda565b60405180910390208383604051610211929190610bda565b604051809103902014610237576040516310d9300f60e11b815260040160405180910390fd5b61026c6102448280610b13565b600081811061025557610255610b5d565b90506020028101906102679190610b73565b610327565b6102768280610b13565b600181811061028757610287610b5d565b90506020028101906102999190610b73565b6102a7906040810190610b93565b6102b091610bea565b146102ce57604051636589f0e160e11b815260040160405180910390fd5b6102ec6102db8280610b13565b600181811061025557610255610b5d565b861461030b576040516392cb8fbb60e01b815260040160405180910390fd5b505050505050565b610320858585858561054b565b5050505050565b60008060026103396040850185610b93565b604051610347929190610bda565b602060405180830381855afa158015610364573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103879190610c08565b905060026103986060850185610b93565b6103af6103a86020880188610b93565b9050610659565b6103bc6020880188610b93565b6103c66020610659565b876040516020016103dd9796959493929190610c5c565b60408051601f19818403018152908290526103f791610ca0565b602060405180830381855afa158015610414573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104379190610c08565b915060005b6104468480610b13565b905081101561054457600261045b8580610b13565b8381811061046b5761046b610b5d565b905060200281019061047d9190610cb3565b6104879080610b93565b856104928880610b13565b868181106104a2576104a2610b5d565b90506020028101906104b49190610cb3565b6104c2906020810190610b93565b6040516020016104d6959493929190610cc9565b60408051601f19818403018152908290526104f091610ca0565b602060405180830381855afa15801561050d573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105309190610c08565b92508061053c81610cf1565b91505061043c565b5050919050565b604080516020808201889052818301879052606080830187905283518084039091018152608083018452805190820120600060a08401527f000000000000000000000000000000000000000000000000000000000000000060c084015260e080840191909152835180840390910181526101008301808552815191830191909120601f860183900490920283016101209081019094528481526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169361063293879187918291018382808284376000920191909152506106c892505050565b6001600160a01b031614610320576040516339e27c8560e21b815260040160405180910390fd5b6060805b6080831061069b578083607f1660801760f81b604051602001610681929190610d18565b60408051601f198184030190525260079290921c9161065d565b808360f81b6040516020016106b1929190610d18565b604051602081830303815290604052915050919050565b60008060006106d785856106ee565b915091506106e481610733565b5090505b92915050565b60008082516041036107245760208301516040840151606085015160001a61071887828585610885565b9450945050505061072c565b506000905060025b9250929050565b600081600481111561074757610747610d3d565b0361074f5750565b600181600481111561076357610763610d3d565b036107b55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156107c9576107c9610d3d565b036108165760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107ac565b600381600481111561082a5761082a610d3d565b036108825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107ac565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108bc5750600090506003610940565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610910573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661093957600060019250925050610940565b9150600090505b94509492505050565b60008083601f84011261095b57600080fd5b50813567ffffffffffffffff81111561097357600080fd5b60208301915083602082850101111561072c57600080fd5b60006040828403121561099d57600080fd5b50919050565b600080600080606085870312156109b957600080fd5b84359350602085013567ffffffffffffffff808211156109d857600080fd5b6109e488838901610949565b909550935060408701359150808211156109fd57600080fd5b50610a0a8782880161098b565b91505092959194509250565b60008060008060008060808789031215610a2f57600080fd5b86359550602087013567ffffffffffffffff80821115610a4e57600080fd5b610a5a8a838b01610949565b90975095506040890135915080821115610a7357600080fd5b610a7f8a838b01610949565b90955093506060890135915080821115610a9857600080fd5b50610aa589828a0161098b565b9150509295509295509295565b600080600080600060808688031215610aca57600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115610af657600080fd5b610b0288828901610949565b969995985093965092949392505050565b6000808335601e19843603018112610b2a57600080fd5b83018035915067ffffffffffffffff821115610b4557600080fd5b6020019150600581901b360382131561072c57600080fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610b8957600080fd5b9190910192915050565b6000808335601e19843603018112610baa57600080fd5b83018035915067ffffffffffffffff821115610bc557600080fd5b60200191503681900382131561072c57600080fd5b8183823760009101908152919050565b803560208310156106e857600019602084900360031b1b1692915050565b600060208284031215610c1a57600080fd5b5051919050565b6000815160005b81811015610c425760208185018101518683015201610c28565b81811115610c51576000828601525b509290920192915050565b86888237600087820160008152610c738189610c21565b9050858782376000908601908152610c8b8186610c21565b93845250506020909101979650505050505050565b6000610cac8284610c21565b9392505050565b60008235603e19833603018112610b8957600080fd5b8486823760008582018581528385602083013760009301602001928352509095945050505050565b600060018201610d1157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000610d248285610c21565b6001600160f81b03199390931683525050600101919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204c0012eebe28f63fe39b9984570299ceb809e22dea601def9f555ce47d4bfdc664736f6c634300080f0033";

type SequencerSignatureVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SequencerSignatureVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SequencerSignatureVerifier__factory extends ContractFactory {
  constructor(...args: SequencerSignatureVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    sequencer_: AddressLike,
    chainId_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(sequencer_, chainId_, overrides || {});
  }
  override deploy(
    sequencer_: AddressLike,
    chainId_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(sequencer_, chainId_, overrides || {}) as Promise<
      SequencerSignatureVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SequencerSignatureVerifier__factory {
    return super.connect(runner) as SequencerSignatureVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequencerSignatureVerifierInterface {
    return new Interface(_abi) as SequencerSignatureVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SequencerSignatureVerifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SequencerSignatureVerifier;
  }
}
